name: Auto-Release on Commit
on:
  push:
    branches: [ main ]
permissions:
  contents: write
jobs:
  auto-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Get current date
        id: date
        run: echo "DATE=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_OUTPUT
        
      - name: Get short SHA
        id: sha
        run: echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        
      - name: Create custom zip without top-level folder
        run: |
          # Create zip directly from the contents of the current directory
          # (excluding .git and other unnecessary files)
          zip -r ../bkoz-retroMC-distrib.zip . -x "*.git*" ".github/*"
        
      # First create the version-specific release
      - name: Create Versioned Release
        id: create_versioned_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: release-${{ steps.date.outputs.DATE }}-${{ steps.sha.outputs.SHA }}
          name: BKOZ-retroMC-${{ steps.sha.outputs.SHA }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: ../bkoz-retroMC-distrib.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Delete existing 'latest' tag and release if they exist
      - name: Delete existing 'latest' tag and release
        run: |
          git push origin :refs/tags/latest || true
          # The above might fail if the tag doesn't exist yet, which is fine
        continue-on-error: true
      
      # Now create a separate 'latest' release with the same files
      - name: Create Latest Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          name: BKOZ-retroMC-Latest
          draft: false
          prerelease: false
          body: "This is always the latest release. See versioned releases for detailed release notes."
          files: ../bkoz-retroMC-distrib.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
